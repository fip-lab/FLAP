/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
//                                                                             //
// RDDL MDP version of Wildlife Preserve instance #19 for IPC 2018 by Fei Fang //
// (feifang [at] cmu.edu), Thanh Hong Nguyen (thanhhng [at] umich.edu) and     //
// Thomas Keller (tho.keller [at] unibas.ch), based on the papers "When        //
// Security Games Go Green: Designing Defender Strategies to Prevent Poaching  //
// and Illegal Fishing" by Fei Fang, Peter Stone and Milind Tambe (IJCAI 2015) //
// and "Analyzing the Effectiveness of Adversary Modeling in Security Games"   //
// by Thanh H. Nguyen, Rong Yang, Amos Azaria, Sarit Kraus and Milind Tambe    //
// (AAAI 2013).                                                                //
//                                                                             //
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////

instance wildlife-preserve_inst_mdp__19 {
    domain = wildlife-preserve_19_mdp;

    objects {
        ranger  : { r1, r2, r3, r4 };
        poacher : { p1, p2, p3, p4 };
    };

    non-fluents {
        DEFENDER-REWARD_a1 = 2.45;
        DEFENDER-PENALTY_a1 = -5.30;
        DEFENDER-REWARD_a2 = 2.05;
        DEFENDER-PENALTY_a2 = -1.19;
        DEFENDER-REWARD_a3 = 2.86;
        DEFENDER-PENALTY_a3 = -4.97;
        DEFENDER-REWARD_a4 = 5.16;
        DEFENDER-PENALTY_a4 = -3.07;
        DEFENDER-REWARD_a5 = 2.38;
        DEFENDER-PENALTY_a5 = -2.90;
        DEFENDER-REWARD_a6 = 1.77;
        DEFENDER-PENALTY_a6 = -2.33;
        DEFENDER-REWARD_a7 = 5.32;
        DEFENDER-PENALTY_a7 = -4.71;
        DEFENDER-REWARD_a8 = 3.54;
        DEFENDER-PENALTY_a8 = -1.28;
        DEFENDER-REWARD_a9 = 5.22;
        DEFENDER-PENALTY_a9 = -3.47;
        DEFENDER-REWARD_a10 = 1.41;
        DEFENDER-PENALTY_a10 = -4.12;
        DEFENDER-REWARD_a11 = 1.89;
        DEFENDER-PENALTY_a11 = -0.03;
        DEFENDER-REWARD_a12 = 3.62;
        DEFENDER-PENALTY_a12 = -4.51;
        DEFENDER-REWARD_a13 = 1.92;
        DEFENDER-PENALTY_a13 = -0.01;
        DEFENDER-REWARD_a14 = 5.14;
        DEFENDER-PENALTY_a14 = -0.90;
        DEFENDER-REWARD_a15 = 0.66;
        DEFENDER-PENALTY_a15 = -3.11;
        DEFENDER-REWARD_a16 = 5.43;
        DEFENDER-PENALTY_a16 = -0.19;

        // correlation between attacker reward and defender penalty as well as
        // attacker penalty and defender reward is 0.80 for all poachers and all areas

        // weights for poacher p1 are: w1 = -24.21, w2 = 1.51, w3 = 0.73
        // reward for poacher p1 in area @a1 is: 4.80
        // penalty for poacher p1 in area @a1 is: -2.85
        // reward for poacher p1 in area @a2 is: 1.87
        // penalty for poacher p1 in area @a2 is: -1.86
        // reward for poacher p1 in area @a3 is: 4.32
        // penalty for poacher p1 in area @a3 is: -2.40
        // reward for poacher p1 in area @a4 is: 2.75
        // penalty for poacher p1 in area @a4 is: -4.26
        // reward for poacher p1 in area @a5 is: 2.50
        // penalty for poacher p1 in area @a5 is: -2.61
        // reward for poacher p1 in area @a6 is: 2.66
        // penalty for poacher p1 in area @a6 is: -1.82
        // reward for poacher p1 in area @a7 is: 4.08
        // penalty for poacher p1 in area @a7 is: -5.32
        // reward for poacher p1 in area @a8 is: 1.12
        // penalty for poacher p1 in area @a8 is: -3.40
        // reward for poacher p1 in area @a9 is: 3.56
        // penalty for poacher p1 in area @a9 is: -4.34
        // reward for poacher p1 in area @a10 is: 3.93
        // penalty for poacher p1 in area @a10 is: -1.23
        // reward for poacher p1 in area @a11 is: 0.61
        // penalty for poacher p1 in area @a11 is: -1.75
        // reward for poacher p1 in area @a12 is: 4.72
        // penalty for poacher p1 in area @a12 is: -2.97
        // reward for poacher p1 in area @a13 is: 1.01
        // penalty for poacher p1 in area @a13 is: -1.60
        // reward for poacher p1 in area @a14 is: 0.89
        // penalty for poacher p1 in area @a14 is: -4.58
        // reward for poacher p1 in area @a15 is: 2.59
        // penalty for poacher p1 in area @a15 is: -1.46
        // reward for poacher p1 in area @a16 is: 0.85
        // penalty for poacher p1 in area @a16 is: -4.98

        // weights for poacher p2 are: w1 = -29.03, w2 = 0.92, w3 = 0.88
        // reward for poacher p2 in area @a1 is: 5.06
        // penalty for poacher p2 in area @a1 is: -2.28
        // reward for poacher p2 in area @a2 is: 1.06
        // penalty for poacher p2 in area @a2 is: -1.84
        // reward for poacher p2 in area @a3 is: 4.29
        // penalty for poacher p2 in area @a3 is: -2.55
        // reward for poacher p2 in area @a4 is: 2.52
        // penalty for poacher p2 in area @a4 is: -4.61
        // reward for poacher p2 in area @a5 is: 3.38
        // penalty for poacher p2 in area @a5 is: -2.88
        // reward for poacher p2 in area @a6 is: 2.38
        // penalty for poacher p2 in area @a6 is: -1.86
        // reward for poacher p2 in area @a7 is: 4.38
        // penalty for poacher p2 in area @a7 is: -5.05
        // reward for poacher p2 in area @a8 is: 1.12
        // penalty for poacher p2 in area @a8 is: -3.49
        // reward for poacher p2 in area @a9 is: 3.28
        // penalty for poacher p2 in area @a9 is: -4.98
        // reward for poacher p2 in area @a10 is: 3.74
        // penalty for poacher p2 in area @a10 is: -1.84
        // reward for poacher p2 in area @a11 is: 0.56
        // penalty for poacher p2 in area @a11 is: -2.21
        // reward for poacher p2 in area @a12 is: 3.91
        // penalty for poacher p2 in area @a12 is: -3.19
        // reward for poacher p2 in area @a13 is: 0.39
        // penalty for poacher p2 in area @a13 is: -1.88
        // reward for poacher p2 in area @a14 is: 1.73
        // penalty for poacher p2 in area @a14 is: -4.70
        // reward for poacher p2 in area @a15 is: 2.58
        // penalty for poacher p2 in area @a15 is: -1.00
        // reward for poacher p2 in area @a16 is: 0.64
        // penalty for poacher p2 in area @a16 is: -4.97

        // weights for poacher p3 are: w1 = -23.36, w2 = 1.13, w3 = 0.55
        // reward for poacher p3 in area @a1 is: 4.37
        // penalty for poacher p3 in area @a1 is: -2.86
        // reward for poacher p3 in area @a2 is: 1.82
        // penalty for poacher p3 in area @a2 is: -2.16
        // reward for poacher p3 in area @a3 is: 4.07
        // penalty for poacher p3 in area @a3 is: -3.25
        // reward for poacher p3 in area @a4 is: 3.52
        // penalty for poacher p3 in area @a4 is: -5.13
        // reward for poacher p3 in area @a5 is: 2.89
        // penalty for poacher p3 in area @a5 is: -2.18
        // reward for poacher p3 in area @a6 is: 2.24
        // penalty for poacher p3 in area @a6 is: -1.91
        // reward for poacher p3 in area @a7 is: 4.77
        // penalty for poacher p3 in area @a7 is: -4.65
        // reward for poacher p3 in area @a8 is: 1.82
        // penalty for poacher p3 in area @a8 is: -3.06
        // reward for poacher p3 in area @a9 is: 3.06
        // penalty for poacher p3 in area @a9 is: -4.55
        // reward for poacher p3 in area @a10 is: 3.33
        // penalty for poacher p3 in area @a10 is: -1.69
        // reward for poacher p3 in area @a11 is: 0.37
        // penalty for poacher p3 in area @a11 is: -2.23
        // reward for poacher p3 in area @a12 is: 4.44
        // penalty for poacher p3 in area @a12 is: -3.70
        // reward for poacher p3 in area @a13 is: 0.66
        // penalty for poacher p3 in area @a13 is: -1.90
        // reward for poacher p3 in area @a14 is: 1.01
        // penalty for poacher p3 in area @a14 is: -4.45
        // reward for poacher p3 in area @a15 is: 3.59
        // penalty for poacher p3 in area @a15 is: -0.57
        // reward for poacher p3 in area @a16 is: 0.77
        // penalty for poacher p3 in area @a16 is: -5.50

        // weights for poacher p4 are: w1 = -25.41, w2 = 0.83, w3 = 0.50
        // reward for poacher p4 in area @a1 is: 4.88
        // penalty for poacher p4 in area @a1 is: -2.10
        // reward for poacher p4 in area @a2 is: 1.46
        // penalty for poacher p4 in area @a2 is: -1.92
        // reward for poacher p4 in area @a3 is: 4.53
        // penalty for poacher p4 in area @a3 is: -2.41
        // reward for poacher p4 in area @a4 is: 2.75
        // penalty for poacher p4 in area @a4 is: -5.18
        // reward for poacher p4 in area @a5 is: 3.52
        // penalty for poacher p4 in area @a5 is: -2.99
        // reward for poacher p4 in area @a6 is: 2.42
        // penalty for poacher p4 in area @a6 is: -2.06
        // reward for poacher p4 in area @a7 is: 3.78
        // penalty for poacher p4 in area @a7 is: -5.16
        // reward for poacher p4 in area @a8 is: 1.48
        // penalty for poacher p4 in area @a8 is: -3.29
        // reward for poacher p4 in area @a9 is: 3.43
        // penalty for poacher p4 in area @a9 is: -5.36
        // reward for poacher p4 in area @a10 is: 3.43
        // penalty for poacher p4 in area @a10 is: -1.22
        // reward for poacher p4 in area @a11 is: 0.60
        // penalty for poacher p4 in area @a11 is: -1.75
        // reward for poacher p4 in area @a12 is: 4.01
        // penalty for poacher p4 in area @a12 is: -3.01
        // reward for poacher p4 in area @a13 is: 1.14
        // penalty for poacher p4 in area @a13 is: -2.68
        // reward for poacher p4 in area @a14 is: 0.77
        // penalty for poacher p4 in area @a14 is: -4.66
        // reward for poacher p4 in area @a15 is: 3.43
        // penalty for poacher p4 in area @a15 is: -0.78
        // reward for poacher p4 in area @a16 is: 0.61
        // penalty for poacher p4 in area @a16 is: -4.88

        ATTACK-WEIGHT_0_a1(p1) = 170.67558;
        ATTACK-WEIGHT_1_a1(p1) = 0.05334;
        ATTACK-WEIGHT_2_a1(p1) = 0.00002;
        ATTACK-WEIGHT_3_a1(p1) = 0.00000;
        ATTACK-WEIGHT_0_a2(p1) = 4.27544;
        ATTACK-WEIGHT_1_a2(p1) = 0.00134;
        ATTACK-WEIGHT_2_a2(p1) = 0.00000;
        ATTACK-WEIGHT_3_a2(p1) = 0.00000;
        ATTACK-WEIGHT_0_a3(p1) = 115.20626;
        ATTACK-WEIGHT_1_a3(p1) = 0.03601;
        ATTACK-WEIGHT_2_a3(p1) = 0.00001;
        ATTACK-WEIGHT_3_a3(p1) = 0.00000;
        ATTACK-WEIGHT_0_a4(p1) = 2.77062;
        ATTACK-WEIGHT_1_a4(p1) = 0.00087;
        ATTACK-WEIGHT_2_a4(p1) = 0.00000;
        ATTACK-WEIGHT_3_a4(p1) = 0.00000;
        ATTACK-WEIGHT_0_a5(p1) = 6.37216;
        ATTACK-WEIGHT_1_a5(p1) = 0.00199;
        ATTACK-WEIGHT_2_a5(p1) = 0.00000;
        ATTACK-WEIGHT_3_a5(p1) = 0.00000;
        ATTACK-WEIGHT_0_a6(p1) = 14.46774;
        ATTACK-WEIGHT_1_a6(p1) = 0.00452;
        ATTACK-WEIGHT_2_a6(p1) = 0.00000;
        ATTACK-WEIGHT_3_a6(p1) = 0.00000;
        ATTACK-WEIGHT_0_a7(p1) = 9.44127;
        ATTACK-WEIGHT_1_a7(p1) = 0.00295;
        ATTACK-WEIGHT_2_a7(p1) = 0.00000;
        ATTACK-WEIGHT_3_a7(p1) = 0.00000;
        ATTACK-WEIGHT_0_a8(p1) = 0.44694;
        ATTACK-WEIGHT_1_a8(p1) = 0.00014;
        ATTACK-WEIGHT_2_a8(p1) = 0.00000;
        ATTACK-WEIGHT_3_a8(p1) = 0.00000;
        ATTACK-WEIGHT_0_a9(p1) = 8.84872;
        ATTACK-WEIGHT_1_a9(p1) = 0.00277;
        ATTACK-WEIGHT_2_a9(p1) = 0.00000;
        ATTACK-WEIGHT_3_a9(p1) = 0.00000;
        ATTACK-WEIGHT_0_a10(p1) = 150.94894;
        ATTACK-WEIGHT_1_a10(p1) = 0.04718;
        ATTACK-WEIGHT_2_a10(p1) = 0.00001;
        ATTACK-WEIGHT_3_a10(p1) = 0.00000;
        ATTACK-WEIGHT_0_a11(p1) = 0.69488;
        ATTACK-WEIGHT_1_a11(p1) = 0.00022;
        ATTACK-WEIGHT_2_a11(p1) = 0.00000;
        ATTACK-WEIGHT_3_a11(p1) = 0.00000;
        ATTACK-WEIGHT_0_a12(p1) = 138.56416;
        ATTACK-WEIGHT_1_a12(p1) = 0.04331;
        ATTACK-WEIGHT_2_a12(p1) = 0.00001;
        ATTACK-WEIGHT_3_a12(p1) = 0.00000;
        ATTACK-WEIGHT_0_a13(p1) = 1.41668;
        ATTACK-WEIGHT_1_a13(p1) = 0.00044;
        ATTACK-WEIGHT_2_a13(p1) = 0.00000;
        ATTACK-WEIGHT_3_a13(p1) = 0.00000;
        ATTACK-WEIGHT_0_a14(p1) = 0.13311;
        ATTACK-WEIGHT_1_a14(p1) = 0.00004;
        ATTACK-WEIGHT_2_a14(p1) = 0.00000;
        ATTACK-WEIGHT_3_a14(p1) = 0.00000;
        ATTACK-WEIGHT_0_a15(p1) = 16.95162;
        ATTACK-WEIGHT_1_a15(p1) = 0.00530;
        ATTACK-WEIGHT_2_a15(p1) = 0.00000;
        ATTACK-WEIGHT_3_a15(p1) = 0.00000;
        ATTACK-WEIGHT_0_a16(p1) = 0.09348;
        ATTACK-WEIGHT_1_a16(p1) = 0.00003;
        ATTACK-WEIGHT_2_a16(p1) = 0.00000;
        ATTACK-WEIGHT_3_a16(p1) = 0.00000;
        ATTACK-WEIGHT_0_a1(p2) = 14.37544;
        ATTACK-WEIGHT_1_a1(p2) = 0.00090;
        ATTACK-WEIGHT_2_a1(p2) = 0.00000;
        ATTACK-WEIGHT_3_a1(p2) = 0.00000;
        ATTACK-WEIGHT_0_a2(p2) = 0.52733;
        ATTACK-WEIGHT_1_a2(p2) = 0.00003;
        ATTACK-WEIGHT_2_a2(p2) = 0.00000;
        ATTACK-WEIGHT_3_a2(p2) = 0.00000;
        ATTACK-WEIGHT_0_a3(p2) = 5.56909;
        ATTACK-WEIGHT_1_a3(p2) = 0.00035;
        ATTACK-WEIGHT_2_a3(p2) = 0.00000;
        ATTACK-WEIGHT_3_a3(p2) = 0.00000;
        ATTACK-WEIGHT_0_a4(p2) = 0.17753;
        ATTACK-WEIGHT_1_a4(p2) = 0.00001;
        ATTACK-WEIGHT_2_a4(p2) = 0.00000;
        ATTACK-WEIGHT_3_a4(p2) = 0.00000;
        ATTACK-WEIGHT_0_a5(p2) = 1.79846;
        ATTACK-WEIGHT_1_a5(p2) = 0.00011;
        ATTACK-WEIGHT_2_a5(p2) = 0.00000;
        ATTACK-WEIGHT_3_a5(p2) = 0.00000;
        ATTACK-WEIGHT_0_a6(p2) = 1.75241;
        ATTACK-WEIGHT_1_a6(p2) = 0.00011;
        ATTACK-WEIGHT_2_a6(p2) = 0.00000;
        ATTACK-WEIGHT_3_a6(p2) = 0.00000;
        ATTACK-WEIGHT_0_a7(p2) = 0.67122;
        ATTACK-WEIGHT_1_a7(p2) = 0.00004;
        ATTACK-WEIGHT_2_a7(p2) = 0.00000;
        ATTACK-WEIGHT_3_a7(p2) = 0.00000;
        ATTACK-WEIGHT_0_a8(p2) = 0.13057;
        ATTACK-WEIGHT_1_a8(p2) = 0.00001;
        ATTACK-WEIGHT_2_a8(p2) = 0.00000;
        ATTACK-WEIGHT_3_a8(p2) = 0.00000;
        ATTACK-WEIGHT_0_a9(p2) = 0.25859;
        ATTACK-WEIGHT_1_a9(p2) = 0.00002;
        ATTACK-WEIGHT_2_a9(p2) = 0.00000;
        ATTACK-WEIGHT_3_a9(p2) = 0.00000;
        ATTACK-WEIGHT_0_a10(p2) = 6.25902;
        ATTACK-WEIGHT_1_a10(p2) = 0.00039;
        ATTACK-WEIGHT_2_a10(p2) = 0.00000;
        ATTACK-WEIGHT_3_a10(p2) = 0.00000;
        ATTACK-WEIGHT_0_a11(p2) = 0.24004;
        ATTACK-WEIGHT_1_a11(p2) = 0.00002;
        ATTACK-WEIGHT_2_a11(p2) = 0.00000;
        ATTACK-WEIGHT_3_a11(p2) = 0.00000;
        ATTACK-WEIGHT_0_a12(p2) = 2.23337;
        ATTACK-WEIGHT_1_a12(p2) = 0.00014;
        ATTACK-WEIGHT_2_a12(p2) = 0.00000;
        ATTACK-WEIGHT_3_a12(p2) = 0.00000;
        ATTACK-WEIGHT_0_a13(p2) = 0.27428;
        ATTACK-WEIGHT_1_a13(p2) = 0.00002;
        ATTACK-WEIGHT_2_a13(p2) = 0.00000;
        ATTACK-WEIGHT_3_a13(p2) = 0.00000;
        ATTACK-WEIGHT_0_a14(p2) = 0.07910;
        ATTACK-WEIGHT_1_a14(p2) = 0.00000;
        ATTACK-WEIGHT_2_a14(p2) = 0.00000;
        ATTACK-WEIGHT_3_a14(p2) = 0.00000;
        ATTACK-WEIGHT_0_a15(p2) = 4.49092;
        ATTACK-WEIGHT_1_a15(p2) = 0.00028;
        ATTACK-WEIGHT_2_a15(p2) = 0.00000;
        ATTACK-WEIGHT_3_a15(p2) = 0.00000;
        ATTACK-WEIGHT_0_a16(p2) = 0.02281;
        ATTACK-WEIGHT_1_a16(p2) = 0.00000;
        ATTACK-WEIGHT_2_a16(p2) = 0.00000;
        ATTACK-WEIGHT_3_a16(p2) = 0.00000;
        ATTACK-WEIGHT_0_a1(p3) = 28.56355;
        ATTACK-WEIGHT_1_a1(p3) = 0.01185;
        ATTACK-WEIGHT_2_a1(p3) = 0.00000;
        ATTACK-WEIGHT_3_a1(p3) = 0.00000;
        ATTACK-WEIGHT_0_a2(p3) = 2.37765;
        ATTACK-WEIGHT_1_a2(p3) = 0.00099;
        ATTACK-WEIGHT_2_a2(p3) = 0.00000;
        ATTACK-WEIGHT_3_a2(p3) = 0.00000;
        ATTACK-WEIGHT_0_a3(p3) = 16.46580;
        ATTACK-WEIGHT_1_a3(p3) = 0.00683;
        ATTACK-WEIGHT_2_a3(p3) = 0.00000;
        ATTACK-WEIGHT_3_a3(p3) = 0.00000;
        ATTACK-WEIGHT_0_a4(p3) = 3.17134;
        ATTACK-WEIGHT_1_a4(p3) = 0.00132;
        ATTACK-WEIGHT_2_a4(p3) = 0.00000;
        ATTACK-WEIGHT_3_a4(p3) = 0.00000;
        ATTACK-WEIGHT_0_a5(p3) = 7.83806;
        ATTACK-WEIGHT_1_a5(p3) = 0.00325;
        ATTACK-WEIGHT_2_a5(p3) = 0.00000;
        ATTACK-WEIGHT_3_a5(p3) = 0.00000;
        ATTACK-WEIGHT_0_a6(p3) = 4.37273;
        ATTACK-WEIGHT_1_a6(p3) = 0.00181;
        ATTACK-WEIGHT_2_a6(p3) = 0.00000;
        ATTACK-WEIGHT_3_a6(p3) = 0.00000;
        ATTACK-WEIGHT_0_a7(p3) = 16.82795;
        ATTACK-WEIGHT_1_a7(p3) = 0.00698;
        ATTACK-WEIGHT_2_a7(p3) = 0.00000;
        ATTACK-WEIGHT_3_a7(p3) = 0.00000;
        ATTACK-WEIGHT_0_a8(p3) = 1.45328;
        ATTACK-WEIGHT_1_a8(p3) = 0.00060;
        ATTACK-WEIGHT_2_a8(p3) = 0.00000;
        ATTACK-WEIGHT_3_a8(p3) = 0.00000;
        ATTACK-WEIGHT_0_a9(p3) = 2.59577;
        ATTACK-WEIGHT_1_a9(p3) = 0.00108;
        ATTACK-WEIGHT_2_a9(p3) = 0.00000;
        ATTACK-WEIGHT_3_a9(p3) = 0.00000;
        ATTACK-WEIGHT_0_a10(p3) = 16.81121;
        ATTACK-WEIGHT_1_a10(p3) = 0.00697;
        ATTACK-WEIGHT_2_a10(p3) = 0.00000;
        ATTACK-WEIGHT_3_a10(p3) = 0.00000;
        ATTACK-WEIGHT_0_a11(p3) = 0.44775;
        ATTACK-WEIGHT_1_a11(p3) = 0.00019;
        ATTACK-WEIGHT_2_a11(p3) = 0.00000;
        ATTACK-WEIGHT_3_a11(p3) = 0.00000;
        ATTACK-WEIGHT_0_a12(p3) = 19.51947;
        ATTACK-WEIGHT_1_a12(p3) = 0.00810;
        ATTACK-WEIGHT_2_a12(p3) = 0.00000;
        ATTACK-WEIGHT_3_a12(p3) = 0.00000;
        ATTACK-WEIGHT_0_a13(p3) = 0.74324;
        ATTACK-WEIGHT_1_a13(p3) = 0.00031;
        ATTACK-WEIGHT_2_a13(p3) = 0.00000;
        ATTACK-WEIGHT_3_a13(p3) = 0.00000;
        ATTACK-WEIGHT_0_a14(p3) = 0.27313;
        ATTACK-WEIGHT_1_a14(p3) = 0.00011;
        ATTACK-WEIGHT_2_a14(p3) = 0.00000;
        ATTACK-WEIGHT_3_a14(p3) = 0.00000;
        ATTACK-WEIGHT_0_a15(p3) = 41.56230;
        ATTACK-WEIGHT_1_a15(p3) = 0.01724;
        ATTACK-WEIGHT_2_a15(p3) = 0.00001;
        ATTACK-WEIGHT_3_a15(p3) = 0.00000;
        ATTACK-WEIGHT_0_a16(p3) = 0.11740;
        ATTACK-WEIGHT_1_a16(p3) = 0.00005;
        ATTACK-WEIGHT_2_a16(p3) = 0.00000;
        ATTACK-WEIGHT_3_a16(p3) = 0.00000;
        ATTACK-WEIGHT_0_a1(p4) = 20.45892;
        ATTACK-WEIGHT_1_a1(p4) = 0.00429;
        ATTACK-WEIGHT_2_a1(p4) = 0.00000;
        ATTACK-WEIGHT_3_a1(p4) = 0.00000;
        ATTACK-WEIGHT_0_a2(p4) = 1.29922;
        ATTACK-WEIGHT_1_a2(p4) = 0.00027;
        ATTACK-WEIGHT_2_a2(p4) = 0.00000;
        ATTACK-WEIGHT_3_a2(p4) = 0.00000;
        ATTACK-WEIGHT_0_a3(p4) = 13.10845;
        ATTACK-WEIGHT_1_a3(p4) = 0.00275;
        ATTACK-WEIGHT_2_a3(p4) = 0.00000;
        ATTACK-WEIGHT_3_a3(p4) = 0.00000;
        ATTACK-WEIGHT_0_a4(p4) = 0.75337;
        ATTACK-WEIGHT_1_a4(p4) = 0.00016;
        ATTACK-WEIGHT_2_a4(p4) = 0.00000;
        ATTACK-WEIGHT_3_a4(p4) = 0.00000;
        ATTACK-WEIGHT_0_a5(p4) = 4.24109;
        ATTACK-WEIGHT_1_a5(p4) = 0.00089;
        ATTACK-WEIGHT_2_a5(p4) = 0.00000;
        ATTACK-WEIGHT_3_a5(p4) = 0.00000;
        ATTACK-WEIGHT_0_a6(p4) = 2.69431;
        ATTACK-WEIGHT_1_a6(p4) = 0.00056;
        ATTACK-WEIGHT_2_a6(p4) = 0.00000;
        ATTACK-WEIGHT_3_a6(p4) = 0.00000;
        ATTACK-WEIGHT_0_a7(p4) = 1.79296;
        ATTACK-WEIGHT_1_a7(p4) = 0.00038;
        ATTACK-WEIGHT_2_a7(p4) = 0.00000;
        ATTACK-WEIGHT_3_a7(p4) = 0.00000;
        ATTACK-WEIGHT_0_a8(p4) = 0.66915;
        ATTACK-WEIGHT_1_a8(p4) = 0.00014;
        ATTACK-WEIGHT_2_a8(p4) = 0.00000;
        ATTACK-WEIGHT_3_a8(p4) = 0.00000;
        ATTACK-WEIGHT_0_a9(p4) = 1.21326;
        ATTACK-WEIGHT_1_a9(p4) = 0.00025;
        ATTACK-WEIGHT_2_a9(p4) = 0.00000;
        ATTACK-WEIGHT_3_a9(p4) = 0.00000;
        ATTACK-WEIGHT_0_a10(p4) = 9.47502;
        ATTACK-WEIGHT_1_a10(p4) = 0.00199;
        ATTACK-WEIGHT_2_a10(p4) = 0.00000;
        ATTACK-WEIGHT_3_a10(p4) = 0.00000;
        ATTACK-WEIGHT_0_a11(p4) = 0.69108;
        ATTACK-WEIGHT_1_a11(p4) = 0.00014;
        ATTACK-WEIGHT_2_a11(p4) = 0.00000;
        ATTACK-WEIGHT_3_a11(p4) = 0.00000;
        ATTACK-WEIGHT_0_a12(p4) = 6.31327;
        ATTACK-WEIGHT_1_a12(p4) = 0.00132;
        ATTACK-WEIGHT_2_a12(p4) = 0.00000;
        ATTACK-WEIGHT_3_a12(p4) = 0.00000;
        ATTACK-WEIGHT_0_a13(p4) = 0.68260;
        ATTACK-WEIGHT_1_a13(p4) = 0.00014;
        ATTACK-WEIGHT_2_a13(p4) = 0.00000;
        ATTACK-WEIGHT_3_a13(p4) = 0.00000;
        ATTACK-WEIGHT_0_a14(p4) = 0.18773;
        ATTACK-WEIGHT_1_a14(p4) = 0.00004;
        ATTACK-WEIGHT_2_a14(p4) = 0.00000;
        ATTACK-WEIGHT_3_a14(p4) = 0.00000;
        ATTACK-WEIGHT_0_a15(p4) = 11.78822;
        ATTACK-WEIGHT_1_a15(p4) = 0.00247;
        ATTACK-WEIGHT_2_a15(p4) = 0.00000;
        ATTACK-WEIGHT_3_a15(p4) = 0.00000;
        ATTACK-WEIGHT_0_a16(p4) = 0.14733;
        ATTACK-WEIGHT_1_a16(p4) = 0.00003;
        ATTACK-WEIGHT_2_a16(p4) = 0.00000;
        ATTACK-WEIGHT_3_a16(p4) = 0.00000;

        POACHER-REMEMBERS_1(p1);
        POACHER-REMEMBERS_2(p1);
        POACHER-REMEMBERS_3(p1);
        POACHER-REMEMBERS_1(p2);
        POACHER-REMEMBERS_2(p2);
        POACHER-REMEMBERS_3(p2);
        POACHER-REMEMBERS_1(p3);
        POACHER-REMEMBERS_2(p3);
        POACHER-REMEMBERS_3(p3);
        POACHER-REMEMBERS_1(p4);
        POACHER-REMEMBERS_2(p4);
        POACHER-REMEMBERS_3(p4);

    };

    init-state {
        ~was-defended_1_a1;
    };

    horizon = 40;

    discount = 1.0;
}